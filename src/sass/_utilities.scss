$utilities: (
  "font-size": (
    "prefix": "font",
    "values": (
      "sm": $sm-font-size,
      "md": $md-font-size,
      "lg": $lg-font-size,
      "xl": $xl-font-size,
      "base": $base-font-size,
    ),
  ),
  "display": (
    "prefix": "d",
    "values": (
      "flex": flex,
      "inline-block": inline-block,
      "block": block,
      "none": none,
    ),
  ),
  "flex-direction": (
    "prefix": "direction",
    "values": (
      "row": row,
      "column": column,
    ),
  ),
  "border-radius": (
    "prefix": "rounded",
    "values": (
      "5": 5px,
      "10": 10px,
      "15": 15px,
      "20": 20px,
      "full": 50%,
    ),
  ),
  "line-height": (
    "prefix": "lh",
    "values": (
      "base": $base-line-height,
      "sm": $sm-line-height,
      "md": $md-line-height,
      "lg": $lg-line-height,
      "xl": $xl-line-height,
      "xxl": $xxl-line-height,
    ),
  ),
  "font-weight": (
    "prefix": "fw",
    "values": (
      "lighter": lighter,
      "bolder": bolder,
      "bold": bold,
      "sm": 200,
      "md": 400,
      "lg": 600,
      "xl": 800,
    ),
  ),
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
      "auto": 0 auto,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
);

// Flex utilities

$justify-values: flex-start, flex-end, center, space-between, space-around;
$align-values: stretch, flex-start, flex-end, center;

@each $val in $justify-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

@each $val in $align-values {
  .align-#{$val} {
    align-items: $val;
  }
}

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    .#{$prefix}-#{$k} {
      #{$property}: $v;
    }
  }
}

@include sm {
  @each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @if ($prefix == "d") {
      @each $k, $v in $values {
        .#{$prefix}-sm-#{$k} {
          #{$property}: $v;
        }
      }
    }
  }

  @each $val in $justify-values {
    .justify-sm-#{$val} {
      justify-content: $val;
    }
  }

  @each $val in $align-values {
    .align-sm-#{$val} {
      align-items: $val;
    }
  }
}

@include md {
  @each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @if ($prefix == "d") {
      @each $k, $v in $values {
        .#{$prefix}-md-#{$k} {
          #{$property}: $v;
        }
      }
    }
  }

  @each $val in $justify-values {
    .justify-md-#{$val} {
      justify-content: $val;
    }
  }

  @each $val in $align-values {
    .align-md-#{$val} {
      align-items: $val;
    }
  }
}

@include lg {
  @each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @if ($prefix == "d") {
      @each $k, $v in $values {
        .#{$prefix}-lg-#{$k} {
          #{$property}: $v;
        }
      }
    }
  }

  @each $val in $justify-values {
    .justify-lg-#{$val} {
      justify-content: $val;
    }
  }

  @each $val in $align-values {
    .align-lg-#{$val} {
      align-items: $val;
    }
  }
}

@include xl {
  @each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @if ($prefix == "d") {
      @each $k, $v in $values {
        .#{$prefix}-xl-#{$k} {
          #{$property}: $v;
        }
      }
    }
  }
  @each $val in $justify-values {
    .justify-xl-#{$val} {
      justify-content: $val;
    }
  }

  @each $val in $align-values {
    .align-xl-#{$val} {
      align-items: $val;
    }
  }
}

.text-center {
  text-align: center;
}

.h-auto {
  height: auto;
}

.hidden {
  overflow: hidden;
}

// Utilities Width

$size-values: width, min-width, max-width;

@each $val in $size-values {
  @for $i from 1 through 20 {
    $name: $i * 5;

    .#{$val}-#{$name} {
      #{$val}: $i * 5%;
    }
  }
}

@include sm {
  @each $val in $size-values {
    @for $i from 1 through 20 {
      $name: $i * 5;

      .#{$val}-sm-#{$name} {
        #{$val}: $i * 5%;
      }
    }
  }
}

@include md {
  @each $val in $size-values {
    @for $i from 1 through 20 {
      $name: $i * 5;

      .#{$val}-md-#{$name} {
        #{$val}: $i * 5%;
      }
    }
  }
}

@include lg {
  @each $val in $size-values {
    @for $i from 1 through 20 {
      $name: $i * 5;

      .#{$val}-lg-#{$name} {
        #{$val}: $i * 5%;
      }
    }
  }
}

@include xl {
  @each $val in $size-values {
    @for $i from 1 through 20 {
      $name: $i * 5;

      .#{$val}-xl-#{$name} {
        #{$val}: $i * 5%;
      }
    }
  }
}
